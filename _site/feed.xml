<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2022-03-06T10:28:29+00:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Adam</title><subtitle>Adam的个人博客，公众号：算法工程师要早睡</subtitle><author><name>adamzhangchao</name></author><entry><title type="html">在 Mac 下编译 chaosblade</title><link href="http://localhost:4000/2022/02/19/compile-chaosblade-on-mac/" rel="alternate" type="text/html" title="在 Mac 下编译 chaosblade" /><published>2022-02-19T00:00:00+00:00</published><updated>2022-02-19T00:00:00+00:00</updated><id>http://localhost:4000/2022/02/19/compile-chaosblade-on-mac</id><content type="html" xml:base="http://localhost:4000/2022/02/19/compile-chaosblade-on-mac/">&lt;p&gt;首先声明，这不是一份指南，这是一份失败的操作流水记录。我得到的最终结果：编译成功，但是无法运行，放弃在 Mac 平台直接使用此工具，乖乖用 Linux 或者容器环境。&lt;/p&gt;

&lt;p&gt;以下问题的遇到和解决记录，基本是按时间序。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/chaosblade-io/chaosblade#compile&quot;&gt;chaosblade 项目的 README 上自行编译部分&lt;/a&gt; 说明很简单，就是 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;make build_darwin&lt;/code&gt; 这么一条命令而已。&lt;/p&gt;

&lt;h2 id=&quot;环境准备&quot;&gt;环境准备&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;安装 go，&lt;a href=&quot;https://go.dev/&quot;&gt;https://go.dev/&lt;/a&gt; 下载最新版安装，我安装的是 1.17.7 版本，然后将 /usr/local/go/bin 添加到 PATH。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;安装和配置 JAVA 环境。（我以前装过，本次先没动它，但实际后面也遇到问题与此相关。）&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;安装 Docker Desktop。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;下载源码开始编译&quot;&gt;下载源码，开始编译&lt;/h2&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone git@github.com:chaosblade-io/chaosblade.git
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;chaosblade
make build_darwin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;然后，兵来将挡，水来土掩的问题解决之旅开始了。&lt;/p&gt;

&lt;h2 id=&quot;遇到问题解决问题&quot;&gt;遇到问题，解决问题&lt;/h2&gt;

&lt;h3 id=&quot;0x01-网络问题&quot;&gt;0x01 网络问题&lt;/h3&gt;

&lt;p&gt;编译过程中需要下载一些源码和二进制文件，首先遇到了网络问题。&lt;/p&gt;

&lt;p&gt;如果遇到 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;timeout&lt;/code&gt; 或者 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fatal: 无法访问 &apos;xxxx&apos;：LibreSSL SSL_connect: Operation timed out in connection to xxx.com:443&lt;/code&gt; 之类的提示，一般是因为有一些资源偶尔需要科学上网才能访问。&lt;/p&gt;

&lt;p&gt;解决方法：&lt;/p&gt;

&lt;p&gt;终端挂代理：&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;http_proxy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;http://127.0.0.1:54107
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;https_proxy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;http://127.0.0.1:54107
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;no_proxy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;chaosblade.oss-cn-hangzhou.aliyuncs.com&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;其中代理自备，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;no_proxy&lt;/code&gt; 那一行是指定从阿里域名下载不走代理。&lt;/p&gt;

&lt;p&gt;如果遇到下载 &lt;a href=&quot;https://chaosblade.oss-cn-hangzhou.aliyuncs.com/agent/github/sandbox/sandbox-1.3.1-bin.zip&quot;&gt;https://chaosblade.oss-cn-hangzhou.aliyuncs.com/agent/github/sandbox/sandbox-1.3.1-bin.zip&lt;/a&gt; 特别慢，几 kb/s 的速度，但是用浏览器下载很快，那可以先停掉编译，直接用浏览器下载好该文件，放到 target/cache/chaosblade-exec-jvm/build-target/cache 下面，再重新开始编译。&lt;/p&gt;

&lt;p&gt;同理：&lt;/p&gt;

&lt;p&gt;如果遇到下载 &lt;a href=&quot;https://chaosblade.oss-cn-hangzhou.aliyuncs.com/agent/release/tools.jar&quot;&gt;https://chaosblade.oss-cn-hangzhou.aliyuncs.com/agent/release/tools.jar&lt;/a&gt; 特别慢，可以先停掉编译，直接用浏览器下载好该文件，放到 target/cache/chaosblade-exec-jvm/build-target/cache 下面，再重新开始编译。&lt;/p&gt;

&lt;p&gt;例外是如果遇到下载 &lt;a href=&quot;https://chaosblade.oss-cn-hangzhou.aliyuncs.com/agent/github/1.5.0/chaosblade-1.5.0-linux-amd64.tar.gz&quot;&gt;https://chaosblade.oss-cn-hangzhou.aliyuncs.com/agent/github/1.5.0/chaosblade-1.5.0-linux-amd64.tar.gz&lt;/a&gt; 特别慢，手动下载，放到 target/cache/chaosblade-operator/build/cache 也不行，编译过程只认自己下载的。&lt;/p&gt;

&lt;p&gt;由以上得出的小技巧：&lt;/p&gt;

&lt;p&gt;如果从 GitHub release 界面下载 chaosblade 的 release 文件特别慢，比如 &lt;a href=&quot;https://github.com/chaosblade-io/chaosblade/releases/download/v1.3.0/chaosblade-1.3.0-darwin-amd64.tar.gz&quot;&gt;https://github.com/chaosblade-io/chaosblade/releases/download/v1.3.0/chaosblade-1.3.0-darwin-amd64.tar.gz&lt;/a&gt;，可以将链接替换为 &lt;a href=&quot;https://chaosblade.oss-cn-hangzhou.aliyuncs.com/agent/github/1.3.0/chaosblade-1.3.0-darwin-amd64.tar.gz&quot;&gt;https://chaosblade.oss-cn-hangzhou.aliyuncs.com/agent/github/1.3.0/chaosblade-1.3.0-darwin-amd64.tar.gz&lt;/a&gt; 加速下载。&lt;/p&gt;

&lt;h3 id=&quot;0x02-go-依赖模块问题&quot;&gt;0x02 go 依赖模块问题&lt;/h3&gt;

&lt;p&gt;如果遇到&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt;/model.go:22:2: missing go.sum entry &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;module providing package github.com/chaosblade-io/chaosblade-exec-os/exec &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;imported by github.com/chaosblade-io/chaosblade-exec-docker/exec&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; to add:
        go get github.com/chaosblade-io/chaosblade-exec-docker/exec
&lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt;/executor_execin.go:29:2: missing go.sum entry &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;module providing package github.com/chaosblade-io/chaosblade-spec-go/channel &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;imported by github.com/chaosblade-io/chaosblade-exec-docker/exec&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; to add:
        go get github.com/chaosblade-io/chaosblade-exec-docker/exec
&lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt;/client.go:29:2: missing go.sum entry &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;module providing package github.com/chaosblade-io/chaosblade-spec-go/spec&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; to add:
        go mod download github.com/chaosblade-io/chaosblade-spec-go
&lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt;/container.go:24:2: missing go.sum entry &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;module providing package github.com/chaosblade-io/chaosblade-spec-go/util&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; to add:
        go mod download github.com/chaosblade-io/chaosblade-spec-go
make[1]: &lt;span class=&quot;k&quot;&gt;***&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;build_yaml] Error 1
make: &lt;span class=&quot;k&quot;&gt;***&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;docker] Error 2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;到 target/cache/chaosblade-exec-docker 和 target/cache/chaosblade-exec-os 目录下执行&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;go mod tidy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;整理依赖，参考 &lt;a href=&quot;https://stackoverflow.com/questions/67203641/missing-go-sum-entry-for-module-providing-package-package-name&quot;&gt;https://stackoverflow.com/questions/67203641/missing-go-sum-entry-for-module-providing-package-package-name&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;0x03-java-编译问题&quot;&gt;0x03 Java 编译问题&lt;/h3&gt;

&lt;p&gt;如果遇到报错：&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.1:compile (default-compile) on project chaosblade-exec-spi: Compilation failure: Compilation failure:
[ERROR] 不再支持源选项 6。请使用 7 或更高版本。
[ERROR] 不再支持目标选项 6。请使用 7 或更高版本。
[ERROR] -&amp;gt; [Help 1]
[ERROR]
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR]
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException
[ERROR]
[ERROR] After correcting the problems, you can resume the build with the command
[ERROR]   mvn &amp;lt;args&amp;gt; -rf :chaosblade-exec-spi
make[1]: *** [build_java] Error 1
make: *** [java] Error 2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;修改 target/cache/chaosblade-exec-jvm/chaosblade-exec-spi/pom.xml 里的&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;source&amp;gt;&lt;/span&gt;6&lt;span class=&quot;nt&quot;&gt;&amp;lt;/source&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;target&amp;gt;&lt;/span&gt;6&lt;span class=&quot;nt&quot;&gt;&amp;lt;/target&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;为&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;source&amp;gt;&lt;/span&gt;8&lt;span class=&quot;nt&quot;&gt;&amp;lt;/source&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;target&amp;gt;&lt;/span&gt;8&lt;span class=&quot;nt&quot;&gt;&amp;lt;/target&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;同理，后面还会遇到类似的报错，对应还要修改：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;target/cache/chaosblade-exec-jvm/chaosblade-exec-common/pom.xml&lt;/li&gt;
  &lt;li&gt;target/cache/chaosblade-exec-jvm/chaosblade-exec-service/pom.xml&lt;/li&gt;
  &lt;li&gt;target/cache/chaosblade-exec-jvm/chaosblade-exec-bootstrap/chaosblade-exec-bootstrap-jvmsandbox/pom.xml&lt;/li&gt;
  &lt;li&gt;target/cache/chaosblade-exec-jvm/chaosblade-exec-plugin/chaosblade-exec-plugin-dubbo/pom.xml&lt;/li&gt;
  &lt;li&gt;target/cache/chaosblade-exec-jvm/chaosblade-exec-plugin/chaosblade-exec-plugin-jvm/pom.xml&lt;/li&gt;
  &lt;li&gt;target/cache/chaosblade-exec-jvm/chaosblade-exec-plugin/chaosblade-exec-plugin-mysql/pom.xml&lt;/li&gt;
  &lt;li&gt;target/cache/chaosblade-exec-jvm/chaosblade-exec-plugin/chaosblade-exec-plugin-postgrelsql/pom.xml&lt;/li&gt;
  &lt;li&gt;target/cache/chaosblade-exec-jvm/chaosblade-exec-plugin/chaosblade-exec-plugin-servlet/pom.xml&lt;/li&gt;
  &lt;li&gt;target/cache/chaosblade-exec-jvm/chaosblade-exec-plugin/chaosblade-exec-plugin-jedis/pom.xml&lt;/li&gt;
  &lt;li&gt;target/cache/chaosblade-exec-jvm/chaosblade-exec-plugin/chaosblade-exec-plugin-elasticsearch/pom.xml&lt;/li&gt;
  &lt;li&gt;target/cache/chaosblade-exec-jvm/chaosblade-exec-plugin/chaosblade-exec-plugin-hbase/pom.xml&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;另外：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;target/cache/chaosblade-exec-jvm/chaosblade-exec-plugin/pom.xml&lt;/li&gt;
  &lt;li&gt;target/cache/chaosblade-exec-jvm/chaosblade-exec-plugin/chaosblade-exec-plugin-dubbo/pom.xml（存疑）&lt;/li&gt;
  &lt;li&gt;target/cache/chaosblade-exec-jvm/chaosblade-exec-plugin/chaosblade-exec-plugin-http/pom.xml（存疑）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;里是需要添加&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;build&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;plugins&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;plugin&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.apache.maven.plugins&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;maven-compiler-plugin&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;source&amp;gt;&lt;/span&gt;8&lt;span class=&quot;nt&quot;&gt;&amp;lt;/source&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;target&amp;gt;&lt;/span&gt;8&lt;span class=&quot;nt&quot;&gt;&amp;lt;/target&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/plugin&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/plugins&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/build&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;如果遇到&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.1:compile (default-compile) on project chaosblade-exec-plugin-redisson: Compilation failure
[ERROR] /Users/mazhuang/github/chaosblade/target/cache/chaosblade-exec-jvm/chaosblade-exec-plugin/chaosblade-exec-plugin-redisson/src/main/java/com/alibaba/chaosblade/exec/plugin/redisson/RedissonEnhancer.java:[52,23] 对info的引用不明确
[ERROR]   org.slf4j.Logger 中的方法 info(java.lang.String,java.lang.Object...) 和 org.slf4j.Logger 中的方法 info(java.lang.String,java.lang.Throwable) 都匹配
[ERROR]
[ERROR] -&amp;gt; [Help 1]
[ERROR]
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR]
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException
[ERROR]
[ERROR] After correcting the problems, you can resume the build with the command
[ERROR]   mvn &amp;lt;args&amp;gt; -rf :chaosblade-exec-plugin-redisson
make[1]: *** [build_java] Error 1
make: *** [java] Error 2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;修改 target/cache/chaosblade-exec-jvm/chaosblade-exec-plugin/chaosblade-exec-plugin-redisson/src/main/java/com/alibaba/chaosblade/exec/plugin/redisson/RedissonEnhancer.java&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;no&quot;&gt;LOGGER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;method command {}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ReflectUtil&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;invokeMethod&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;getName&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;改成&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tmpResult&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;  &lt;span class=&quot;nc&quot;&gt;ReflectUtil&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;invokeMethod&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;getName&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;LOGGER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;method command {}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tmpResult&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;如果遇到&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.1:compile (default-compile) on project chaosblade-exec-common: Fatal error compiling: java.lang.IllegalAccessError: class lombok.javac.apt.LombokProcessor (in unnamed module @0x45da40ad) cannot access class com.sun.tools.javac.processing.JavacProcessingEnvironment (in module jdk.compiler) because module jdk.compiler does not export com.sun.tools.javac.processing to unnamed module @0x45da40ad -&amp;gt; [Help 1]
[ERROR]
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR]
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException
[ERROR]
[ERROR] After correcting the problems, you can resume the build with the command
[ERROR]   mvn &amp;lt;args&amp;gt; -rf :chaosblade-exec-common
make[1]: *** [build_java] Error 1
make: *** [java] Error 2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;将 target/cache/chaosblade-exec-jvm/chaosblade-exec-common/pom.xml&lt;/p&gt;

&lt;p&gt;lombok 版本由 1.18.10 改为 1.18.20，参考 https://www.cnblogs.com/ZZG-GANGAN/p/14789050.html&lt;/p&gt;

&lt;p&gt;如果遇到&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;The&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;JAVA_HOME&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;environment&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;variable&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;defined&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;correctly&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;environment&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;variable&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;needed&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;run&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;program&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;make&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;***&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;build_java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Error&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;make:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;***&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Error&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;那配置 JAVA_HOME：&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/usr/libexec/java_home &lt;span class=&quot;nt&quot;&gt;-V&lt;/span&gt;
vim ~/.zshrc
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;JAVA_HOME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/Library/Java/JavaVirtualMachines/jdk1.8.0_271.jdk/Contents/Home
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$JAVA_HOME&lt;/span&gt;/bin:&lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;
:wq
&lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; ~/.zshrc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;0x04-docker-问题&quot;&gt;0x04 Docker 问题&lt;/h3&gt;

&lt;p&gt;如果遇到&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker: Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?.
See &apos;docker run --help&apos;.
make: *** [upx] Error 125
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;启动 Docker Desktop，然后再开始编译。&lt;/p&gt;

&lt;h3 id=&quot;0x0x-未知&quot;&gt;0x0x 未知&lt;/h3&gt;

&lt;p&gt;编码过程中有个警告，不知道有无影响：&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;WARN[0000] parse java spec failed, so skip it, open build/cache/chaosblade/yaml/chaosblade-jvm-spec-1.5.0.yaml: no such file or directory
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;结果&quot;&gt;结果&lt;/h2&gt;

&lt;p&gt;终于编译成功了，生成了 target/chaosblade-1.5.0.tar.gz 文件。&lt;/p&gt;

&lt;p&gt;但解压后执行 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;./blade&lt;/code&gt;，输出：&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;zsh: killed     ./blade
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;下载官方 Release 的 1.3.0 的 darwin 版本文件，也是报同样的问题。&lt;/p&gt;

&lt;p&gt;到 &lt;a href=&quot;https://github.com/chaosblade-io/chaosblade/issues&quot;&gt;Issues&lt;/a&gt; 里翻到了几个类似的问题，官方给出的 &lt;a href=&quot;https://github.com/chaosblade-io/chaosblade/issues/478&quot;&gt;建议&lt;/a&gt;，比如修改系统【安全与隐私】-【通用】配置等，经验证都无效。&lt;/p&gt;

&lt;p&gt;至此，如文首所述，放弃了在 Mac 平台下折腾，直接用 Linux 或者容器环境来体验。&lt;/p&gt;</content><author><name>adamzhangchao</name></author><category term="混沌工程" /><summary type="html">首先声明，这不是一份指南，这是一份失败的操作流水记录。我得到的最终结果：编译成功，但是无法运行，放弃在 Mac 平台直接使用此工具，乖乖用 Linux 或者容器环境。</summary></entry><entry><title type="html">给 zsh 自定义命令添加参数自动补全</title><link href="http://localhost:4000/2022/02/12/zsh-completion/" rel="alternate" type="text/html" title="给 zsh 自定义命令添加参数自动补全" /><published>2022-02-12T00:00:00+00:00</published><updated>2022-02-12T00:00:00+00:00</updated><id>http://localhost:4000/2022/02/12/zsh-completion</id><content type="html" xml:base="http://localhost:4000/2022/02/12/zsh-completion/">&lt;p&gt;有时我会自定义一些 zsh 命令，以便提升某些高频操作的效率。本文记录我给一个自定义命令添加参数自动补全的方法。&lt;/p&gt;

&lt;h2 id=&quot;场景&quot;&gt;场景&lt;/h2&gt;

&lt;p&gt;我自定义了一个 zsh 命令 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gmt&lt;/code&gt;，执行 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gmt &amp;lt;b2&amp;gt;&lt;/code&gt;，可以将当前所在的 git 分支 merge 到 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;b2&amp;gt;&lt;/code&gt; 这个分支。&lt;/p&gt;

&lt;p&gt;它具体完成以下工作：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;切换到 git 分支 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;b2&amp;gt;&lt;/code&gt;；&lt;/li&gt;
  &lt;li&gt;将 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;b2&amp;gt;&lt;/code&gt; 分支更新到最新；&lt;/li&gt;
  &lt;li&gt;询问是否合并，输入 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;y&lt;/code&gt; 则进行分支合并。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;也就是用一条命令完成一个 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git checkout b2&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git pull origin b2&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git merge b1&lt;/code&gt; 这样的组合操作。&lt;/p&gt;

&lt;p&gt;用了一段时间，可以省一些事，美中不足的就是有时候分支名称比较长，只能手动输入，没有自动补全。&lt;/p&gt;

&lt;h2 id=&quot;期望效果&quot;&gt;期望效果&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;输入 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gmt &lt;/code&gt;，然后按 &lt;kbd&gt;tab&lt;/kbd&gt;，自动提示本地的所有 git 分支名称；&lt;/li&gt;
  &lt;li&gt;输入 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gmt fe&lt;/code&gt;，然后按 &lt;kbd&gt;tab&lt;/kbd&gt;，自动补全以 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fe&lt;/code&gt; 开头的 git 分支名称；&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;实现方法&quot;&gt;实现方法&lt;/h2&gt;

&lt;p&gt;在 zsh 配置文件中添加如下代码：&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;compdef _git_merge_to_comp git_merge_to

_git_merge_to_comp&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;local&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt; git_branches
    &lt;span class=&quot;nv&quot;&gt;git_branches&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(@f)&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;git branch &lt;span class=&quot;nt&quot;&gt;--format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;%(refname:short)&apos;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    _describe &lt;span class=&quot;s1&quot;&gt;&apos;command&apos;&lt;/span&gt; git_branches
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;注：&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git_merge_to&lt;/code&gt; 是一个自定义的函数，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gmt&lt;/code&gt; 是这个函数的 alias。&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;这段代码的意思就是使用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_git_merge_to_comp&lt;/code&gt; 这个函数来给 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git_merge_to&lt;/code&gt; 命令做自动补全，自动补全的候选列表是当前项目的所有本地 git 分支名称。&lt;/p&gt;

&lt;p&gt;其中：&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;compdef&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_describe&lt;/code&gt; 等的用法，可以参考 zsh 的官方文档 &lt;a href=&quot;https://zsh.sourceforge.io/Doc/Release/Completion-System.html&quot;&gt;Completion System&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git_branches=(&quot;${(@f)$(git branch --format=&apos;%(refname:short)&apos;)}&quot;)&lt;/code&gt; 的意思是，将 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git branch --format=&apos;%(refname:short)&apos;&lt;/code&gt; 命令的输出按行分割后形成一个字符串数组，赋值给 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git_branches&lt;/code&gt; 变量，这部分可以参考 &lt;a href=&quot;https://unix.stackexchange.com/questions/29724/how-to-properly-collect-an-array-of-lines-in-zsh&quot;&gt;How to properly collect an array of lines in zsh&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;我的 zsh 配置都上传到了 &lt;a href=&quot;https://github.com/mzlogin/config-files&quot;&gt;https://github.com/mzlogin/config-files&lt;/a&gt;，有需要可以参考下。&lt;/p&gt;

&lt;h2 id=&quot;效果演示&quot;&gt;效果演示&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/shell/zsh-gmt-completion.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://zsh.sourceforge.io/Doc/Release/Completion-System.html&quot;&gt;Completion System&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://unix.stackexchange.com/questions/29724/how-to-properly-collect-an-array-of-lines-in-zsh&quot;&gt;How to properly collect an array of lines in zsh&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>adamzhangchao</name></author><category term="Shell" /><summary type="html">有时我会自定义一些 zsh 命令，以便提升某些高频操作的效率。本文记录我给一个自定义命令添加参数自动补全的方法。</summary></entry><entry><title type="html">我的 2021 盘点</title><link href="http://localhost:4000/2022/01/01/my-2021/" rel="alternate" type="text/html" title="我的 2021 盘点" /><published>2022-01-01T00:00:00+00:00</published><updated>2022-01-01T00:00:00+00:00</updated><id>http://localhost:4000/2022/01/01/my-2021</id><content type="html" xml:base="http://localhost:4000/2022/01/01/my-2021/">&lt;p&gt;对于 2021 年，如果仅从岁月流逝的角度，当然是期望时光时光慢些吧；如果从这一年外界的疯狂变幻来讲，又想对它说慢走不送。但终会无力地看清，时间的洪流上并无刻度，你喜欢或者不喜欢，它并不在意，兀自「逝者如斯夫，不舍昼夜」。&lt;/p&gt;

&lt;p&gt;怀着这样微妙的情绪，伴着这几天微信群和朋友圈里大家抒发的美好祝愿来到了新的一年。&lt;/p&gt;

&lt;p&gt;是时候略作盘点，挥别过往，纵情向前。&lt;/p&gt;

&lt;h2 id=&quot;大事记&quot;&gt;大事记&lt;/h2&gt;

&lt;p&gt;总体来讲，今年没什么大的变化，如果非要记一笔，那我会选因为疫情被隔离的经历。&lt;/p&gt;

&lt;p&gt;虽然常居武汉，但之前疫情最严重的时候我在老家，并没有最切身的感受，这一次却是从头经历了从成为密接，到为了和小别能做上核酸检测打各种电话求助，到隔离期间继续熬夜做项目与「隔友们」一起苦中作乐，到为了各自复工的事愁肠百结，到生活终于回归平静，个人的情绪在忐忑绝望苦闷庆幸间横跳，家人们想必也饱受煎熬，还好大家最后都无恙通关。&lt;/p&gt;

&lt;p&gt;疫情已经深刻地改变了我们的生活，时至今日，我还有亲友在西安与之斗争，愿大家都平安，愿能摘下口罩自由呼吸的那天早点到来。&lt;/p&gt;

&lt;h2 id=&quot;分类记录&quot;&gt;分类记录&lt;/h2&gt;

&lt;p&gt;按例简单分类作回顾。&lt;/p&gt;

&lt;h3 id=&quot;运动与健康&quot;&gt;运动与健康&lt;/h3&gt;

&lt;p&gt;这次调整了一下顺序，将这一项提到了分类的最前面，也是因为随着年龄的增长，越来越体会到健康的重要性。&lt;/p&gt;

&lt;p&gt;关键词：伤病，牙齿，保险，癌症。&lt;/p&gt;

&lt;p&gt;今年的运动量仍然以羽毛球为主，跑步基本没有，游泳完全没有。还是作为公司武汉办公室羽毛球活动的主要发起者，每周组织活动，另外周末参加了少量民间活动，技术上没有什么进步，出勤率还算可以。&lt;/p&gt;

&lt;p&gt;去年体检时报出的脂肪肝趋势，今年消失了，血脂和尿酸偏高的情况也有所改善，但「伤病」有点多，运动时两次崴脚一次腰伤，自己推测原因可能是除了羽毛球没有什么其它运动量，肌肉退化了，后面得搭配一些有氧和力量训练。年末买了个椭圆机放家，小别同学用得更多一点，不知道啥时候会变成晾衣架。&lt;/p&gt;

&lt;p&gt;另外值得一说的是终于去医院持续接受牙周治疗了，牙齿的健康状态应该得到一定的修复，躺在治疗椅上脑补医生作业的时候真的很恐怖。每个人都要认真保养牙齿。&lt;/p&gt;

&lt;p&gt;最近一年多的时间里，给我和小别同学陆续把保险配置上了，有点迟，有一些除外承保的情况，好歹也算是能稍安心一点了。&lt;/p&gt;

&lt;p&gt;肺癌，这可能是我周围听说的最普遍的癌症，就身边的亲人来讲就有几例，我们这一辈人也有因此而凋零的了，彼时内心百感交集，此时也憋不出什么话语，只想说世事无常，按期体检，珍惜亲友。&lt;/p&gt;

&lt;h3 id=&quot;书影音&quot;&gt;书影音&lt;/h3&gt;

&lt;p&gt;数据统计自豆瓣记录。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/blog/2021-douban.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;统计数字与直观感受略有不同。&lt;/p&gt;

&lt;p&gt;疫情的这两年感觉窝在家看电影电视剧的时候比之前要多了，但实际上数量并无明显增长。当然也可能是有一些未标记。&lt;/p&gt;

&lt;p&gt;今年看过的影视推荐：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;《旺达幻视》：剧情喜欢，奥妹很美。&lt;/li&gt;
  &lt;li&gt;《肖申克的救赎》：希望至美。&lt;/li&gt;
  &lt;li&gt;《让子弹飞》：可以细品。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;读书的形式还是以 Kindle 阅读为主，略有不同的是现在读过觉得好的书会再买一本实体书收藏。&lt;/p&gt;

&lt;p&gt;今年看过的图书推荐，两本都是能带来一些不同的阅读体验的：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;《沉默的病人》：双故事线，有时间差，挺特别。&lt;/li&gt;
  &lt;li&gt;《禅与摩托车维修艺术》：很独特的一本书，读起来有小学语文老师常说的「夹叙夹议」的感觉。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;github-与博客&quot;&gt;GitHub 与博客&lt;/h3&gt;

&lt;p&gt;GitHub 上的记录：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/blog/2021-github.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;226 contributions，比 2020 年的 303 次进一步下降；&lt;/li&gt;
  &lt;li&gt;最长连击记录 10 天，2021-11-08 到 2021-11-17；&lt;/li&gt;
  &lt;li&gt;有 10 个自然周没有任何记录。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这些指标能一定程度反映对技术的关注和参与度，需要继续提醒自己警惕，技术仍是立身之本。&lt;/p&gt;

&lt;p&gt;博客上今年只发了廖廖 5 篇文章，平均每个季度一篇的节奏。&lt;/p&gt;

&lt;p&gt;我可能陷入了一个误区，每次有值得一写的话题，就会随手记到一个清单，想着后面花点时间回顾下，做到干货足够多，相关知识点都讲到，然后再发出去，殊不知后面可能再不会花时间去看了。日积月累，这个清单里已经攒了不下上百条，它们之中的大多数，大概率是不会转化成输出了。&lt;/p&gt;

&lt;p&gt;往后可以尝试转变思路，「及时输出」，热乎的现场，热乎的记忆，转化成热乎的文章，有不完善的地方「迭代」即可。&lt;/p&gt;

&lt;p&gt;偶尔「草率」一点，没什么大不了的。&lt;/p&gt;

&lt;h3 id=&quot;工作&quot;&gt;工作&lt;/h3&gt;

&lt;p&gt;不好不坏，工作内容上以技术类为主，相对能比较专心纯粹地做事，算是我比较喜欢的节奏，要是更不卷就更好了。dddd，不多言。&lt;/p&gt;

&lt;h3 id=&quot;投资&quot;&gt;投资&lt;/h3&gt;

&lt;p&gt;以指数基金投资为主，受中丐互怜的拖累，今年整体收益负几个点，不过心态还好，相信时间维度拉长结果不会差。&lt;/p&gt;

&lt;h3 id=&quot;其它&quot;&gt;其它&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;看了下三年前的年度盘点，发现吉他那时候就买了，而今技术也没有什么进步，还没有放弃治疗，继续挣扎；&lt;/li&gt;
  &lt;li&gt;今年的旅行记录为 0，没有到过武汉和家乡以外的地方，希望新的一年疫情消散，想去哪的时候就能出发。&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;结语&quot;&gt;结语&lt;/h2&gt;

&lt;p&gt;流水账记完了，犹豫该不该来点正能量 FLAG，就如那些「人间清醒」的反鸡汤所言，今天的我和昨天的我并没有什么两样，并不会因为年份加一就有什么焕然一新。&lt;/p&gt;

&lt;p&gt;那就祝自己和大家新年快乐，健康平安吧。&lt;/p&gt;

&lt;p&gt;慢慢的，把眼下的日子过下去，就好。&lt;/p&gt;</content><author><name>adamzhangchao</name></author><category term="Blog" /><summary type="html">对于 2021 年，如果仅从岁月流逝的角度，当然是期望时光时光慢些吧；如果从这一年外界的疯狂变幻来讲，又想对它说慢走不送。但终会无力地看清，时间的洪流上并无刻度，你喜欢或者不喜欢，它并不在意，兀自「逝者如斯夫，不舍昼夜」。</summary></entry></feed>